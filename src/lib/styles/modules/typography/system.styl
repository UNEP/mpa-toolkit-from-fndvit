@require '../layout'
use('../util.styl.cjs');

$typography = {}
$typography-responsive = {}

_process-config()
  $cfg = {
    default-line-height: unset
    html-font-size: unset
  }

  normalize-line-height($font-size, $line-height)
    $unit = unit($line-height)
    if $unit == ''
      return $line-height
    else if $unit == 'px'
      return unit(round($line-height / $font-size, 2), '')
    else
      error('Line-height must be in px or a multiple of font-size. Got "%s" instead.' % $line-height)

  parse-font-property($font-family, expr)
    $size = expr[0]
    if length(expr) == 1
      $line-height = $cfg.default-line-height
      $weight = $cfg.default-weight
    else if length(expr) == 2
      $line-height = $cfg.default-line-height
      $weight = expr[1]
    else if length(expr) == 3 and expr[1] == '/'
      $line-height = expr[2]
      $weight = $cfg.default-weight
    else if length(expr) == 4 and expr[1] == '/'
      $line-height = expr[2]
      $weight = expr[3]
    else
      error('Invalid font property format "%s".' % expr)

    return {
      font-family: $font-family
      size: unit(round($size / $cfg.html-font-size, 3), 'rem')
      line-height: normalize-line-height($size, $line-height)
      weight: $weight
    }

  parse-responsive-property($font-name)
    $name = selector()
    $breakpoint = current-property[0]
    $typography-responsive[$name] = $typography-responsive[$name] || {}
    $typography-responsive[$name][$breakpoint] = $font-name

  default = parse-responsive-property
  for $breakpoint-name in keys($grid.page)
    define($breakpoint-name, default)

  // mixin blocks for the config file
  responsive-fonts()
    return
  font-group($family)
    hash = convert-props-to-hash(block)
    for k, v in hash
      $typography[k] = parse-font-property($family, v)

  config(opts)
    $cfg.default-line-height = opts.default-line-height
    $cfg.default-weight = opts.default-weight
    $cfg.html-font-size = opts.html-font-size

  for $fn-name in builtin-fn-names()
    define($fn-name, null);

  @require 'config'

_process-config()

get-font-css($font)
  $style = $typography[$font]
  if not $style
    error('No font-styles defined for ' + $font)
  font: $style.weight $style.size/$style.line-height $style.font-family
