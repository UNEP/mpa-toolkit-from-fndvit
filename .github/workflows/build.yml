on:
  workflow_call:
    inputs:
      STACK_NAME:
        required: true
        type: string
      ORIGIN:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      SVELTEKIT_APP_DIR:
        required: true
        type: string
      PUBLIC_DB_RESTORE:
        required: false
        type: boolean
    secrets:
      GOOGLE_OAUTH_CLIENT_ID:
        required: true
      GOOGLE_OAUTH_CLIENT_SECRET:
        required: true
      FASTLY_SERVICE_ID:
        required: true
      FASTLY_API_KEY:
        required: true
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_KEY:
        required: true
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-22.04
    env:
      PUBLIC_GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
      PUBLIC_UPLOAD_BASE_URL: /upload/
      GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
      LOG_TRANSPORT: lambda
      LOG_LEVEL: debug
      LOG_DB_QUERIES: false
      ORIGIN: ${{ inputs.ORIGIN }}
      FASTLY_SERVICE_ID: ${{ secrets.FASTLY_SERVICE_ID }}
      FASTLY_API_KEY: ${{ secrets.FASTLY_API_KEY }}
      SVELTEKIT_APP_DIR: ${{ inputs.SVELTEKIT_APP_DIR }}
      PUBLIC_DB_RESTORE: ${{ inputs.PUBLIC_DB_RESTORE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run clean && pnpm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
          
      - name: Deploy to S3
        # run: cd packages/stack && pnpm exec cdk deploy --app ./dist/stack.js --require-approval never MPAth-shared ${{ inputs.STACK_NAME }}
        run: cd packages/web/build/client && aws s3 cp . s3://${{ secrets.UPLOAD_BUCKET_NAME }}/_app/ --recursive --acl public-read

      # - name: Soft purge cache
      #   run: 'curl -i  -X POST "https://api.fastly.com/service/${{ secrets.FASTLY_SERVICE_ID }}/purge/all" -H "Fastly-Key: ${{ secrets.FASTLY_API_KEY }}" -H "fastly-soft-purge: 1" -H "Accept: application/json"'